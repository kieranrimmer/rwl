Terminals unused in grammar

   CLASS
   ELSE
   FI
   IF
   IN
   INHERITS
   LET
   LOOP
   POOL
   THEN
   WHILE
   CASE
   ESAC
   OF
   DARROW
   NEW
   ISVOID
   NOT
   LE
   ERROR
   UPPER
   LOWER
   CHAR
   BOOL_CONST


Grammar

    0 $accept: program "end of file"

    1 program: explist

    2 explist: explist NEWLINE
    3        | explist exp NEWLINE
    4        | explist error NEWLINE
    5        | %empty

    6 exp: PRINT exp
    7    | WORD ASSIGN exp
    8    | TYPE_DECL WORD ASSIGN exp
    9    | INTEGER_CONST
   10    | WORD '(' ')'
   11    | WORD
   12    | STRING


Terminals, with rules where they appear

"end of file" (0) 0
'(' (40) 10
')' (41) 10
error (256) 4
CLASS (258)
ELSE (259)
FI (260)
IF (261)
IN (262)
INHERITS (263)
LET (264)
LOOP (265)
POOL (266)
THEN (267)
WHILE (268)
CASE (269)
ESAC (270)
OF (271)
DARROW (272)
NEW (273)
ISVOID (274)
ASSIGN (280) 7 8
NOT (281)
LE (282)
ERROR (283)
UPPER (284)
LOWER (285)
WORD (286) 7 8 10 11
NEWLINE (287) 2 3 4
CHAR (288)
PRINT (289) 6
STRING (290) 12
INTEGER_CONST (291) 9
BOOL_CONST (292)
TYPE_DECL (293) 8


Nonterminals, with rules where they appear

$accept (36)
    on left: 0
program (37)
    on left: 1, on right: 0
explist (38)
    on left: 2 3 4 5, on right: 1 2 3 4
exp (39)
    on left: 6 7 8 9 10 11 12, on right: 3 6 7 8


State 0

    0 $accept: . program "end of file"

    $default  reduce using rule 5 (explist)

    program  go to state 1
    explist  go to state 2


State 1

    0 $accept: program . "end of file"

    "end of file"  shift, and go to state 3


State 2

    1 program: explist .
    2 explist: explist . NEWLINE
    3        | explist . exp NEWLINE
    4        | explist . error NEWLINE

    error          shift, and go to state 4
    WORD           shift, and go to state 5
    NEWLINE        shift, and go to state 6
    PRINT          shift, and go to state 7
    STRING         shift, and go to state 8
    INTEGER_CONST  shift, and go to state 9
    TYPE_DECL      shift, and go to state 10

    "end of file"  reduce using rule 1 (program)

    exp  go to state 11


State 3

    0 $accept: program "end of file" .

    $default  accept


State 4

    4 explist: explist error . NEWLINE

    NEWLINE  shift, and go to state 12


State 5

    7 exp: WORD . ASSIGN exp
   10    | WORD . '(' ')'
   11    | WORD .

    ASSIGN  shift, and go to state 13
    '('     shift, and go to state 14

    $default  reduce using rule 11 (exp)


State 6

    2 explist: explist NEWLINE .

    $default  reduce using rule 2 (explist)


State 7

    6 exp: PRINT . exp

    WORD           shift, and go to state 5
    PRINT          shift, and go to state 7
    STRING         shift, and go to state 8
    INTEGER_CONST  shift, and go to state 9
    TYPE_DECL      shift, and go to state 10

    exp  go to state 15


State 8

   12 exp: STRING .

    $default  reduce using rule 12 (exp)


State 9

    9 exp: INTEGER_CONST .

    $default  reduce using rule 9 (exp)


State 10

    8 exp: TYPE_DECL . WORD ASSIGN exp

    WORD  shift, and go to state 16


State 11

    3 explist: explist exp . NEWLINE

    NEWLINE  shift, and go to state 17


State 12

    4 explist: explist error NEWLINE .

    $default  reduce using rule 4 (explist)


State 13

    7 exp: WORD ASSIGN . exp

    WORD           shift, and go to state 5
    PRINT          shift, and go to state 7
    STRING         shift, and go to state 8
    INTEGER_CONST  shift, and go to state 9
    TYPE_DECL      shift, and go to state 10

    exp  go to state 18


State 14

   10 exp: WORD '(' . ')'

    ')'  shift, and go to state 19


State 15

    6 exp: PRINT exp .

    $default  reduce using rule 6 (exp)


State 16

    8 exp: TYPE_DECL WORD . ASSIGN exp

    ASSIGN  shift, and go to state 20


State 17

    3 explist: explist exp NEWLINE .

    $default  reduce using rule 3 (explist)


State 18

    7 exp: WORD ASSIGN exp .

    $default  reduce using rule 7 (exp)


State 19

   10 exp: WORD '(' ')' .

    $default  reduce using rule 10 (exp)


State 20

    8 exp: TYPE_DECL WORD ASSIGN . exp

    WORD           shift, and go to state 5
    PRINT          shift, and go to state 7
    STRING         shift, and go to state 8
    INTEGER_CONST  shift, and go to state 9
    TYPE_DECL      shift, and go to state 10

    exp  go to state 21


State 21

    8 exp: TYPE_DECL WORD ASSIGN exp .

    $default  reduce using rule 8 (exp)
