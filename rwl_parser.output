Terminals unused in grammar

   CLASS
   ELSE
   FI
   IF
   IN
   INHERITS
   LET
   LOOP
   POOL
   THEN
   WHILE
   CASE
   ESAC
   OF
   DARROW
   NEW
   ISVOID
   NOT
   LE
   ERROR
   UPPER
   LOWER
   CHAR
   BOOL_CONST


Grammar

    0 $accept: program "end of file"

    1 program: explist

    2 explist: explist NEWLINE
    3        | explist exp NEWLINE
    4        | %empty

    5 explist_params: explist_params ',' exp
    6               | exp
    7               | %empty

    8 exp: PRINT exp
    9    | '{' explist '}'
   10    | WORD ASSIGN exp
   11    | TYPE_DECL WORD ASSIGN exp
   12    | DEF TYPE_DECL WORD '(' explist_params ')' '{' exp '}'
   13    | INTEGER_CONST
   14    | WORD '(' ')'
   15    | WORD
   16    | STRING


Terminals, with rules where they appear

"end of file" (0) 0
'(' (40) 12 14
')' (41) 12 14
',' (44) 5
'{' (123) 9 12
'}' (125) 9 12
error (256)
CLASS (258)
ELSE (259)
FI (260)
IF (261)
IN (262)
INHERITS (263)
LET (264)
LOOP (265)
POOL (266)
THEN (267)
WHILE (268)
CASE (269)
ESAC (270)
OF (271)
DARROW (272)
NEW (273)
ISVOID (274)
ASSIGN (280) 10 11
NOT (281)
LE (282)
ERROR (283)
UPPER (284)
LOWER (285)
WORD (286) 10 11 12 14 15
NEWLINE (287) 2 3
CHAR (288)
PRINT (289) 8
STRING (290) 16
INTEGER_CONST (291) 13
BOOL_CONST (292)
TYPE_DECL (293) 11 12
DEF (294) 12


Nonterminals, with rules where they appear

$accept (40)
    on left: 0
program (41)
    on left: 1, on right: 0
explist (42)
    on left: 2 3 4, on right: 1 2 3 9
explist_params (43)
    on left: 5 6 7, on right: 5 12
exp (44)
    on left: 8 9 10 11 12 13 14 15 16, on right: 3 5 6 8 10 11 12


State 0

    0 $accept: . program "end of file"

    $default  reduce using rule 4 (explist)

    program  go to state 1
    explist  go to state 2


State 1

    0 $accept: program . "end of file"

    "end of file"  shift, and go to state 3


State 2

    1 program: explist .
    2 explist: explist . NEWLINE
    3        | explist . exp NEWLINE

    WORD           shift, and go to state 4
    NEWLINE        shift, and go to state 5
    PRINT          shift, and go to state 6
    STRING         shift, and go to state 7
    INTEGER_CONST  shift, and go to state 8
    TYPE_DECL      shift, and go to state 9
    DEF            shift, and go to state 10
    '{'            shift, and go to state 11

    $default  reduce using rule 1 (program)

    exp  go to state 12


State 3

    0 $accept: program "end of file" .

    $default  accept


State 4

   10 exp: WORD . ASSIGN exp
   14    | WORD . '(' ')'
   15    | WORD .

    ASSIGN  shift, and go to state 13
    '('     shift, and go to state 14

    $default  reduce using rule 15 (exp)


State 5

    2 explist: explist NEWLINE .

    $default  reduce using rule 2 (explist)


State 6

    8 exp: PRINT . exp

    WORD           shift, and go to state 4
    PRINT          shift, and go to state 6
    STRING         shift, and go to state 7
    INTEGER_CONST  shift, and go to state 8
    TYPE_DECL      shift, and go to state 9
    DEF            shift, and go to state 10
    '{'            shift, and go to state 11

    exp  go to state 15


State 7

   16 exp: STRING .

    $default  reduce using rule 16 (exp)


State 8

   13 exp: INTEGER_CONST .

    $default  reduce using rule 13 (exp)


State 9

   11 exp: TYPE_DECL . WORD ASSIGN exp

    WORD  shift, and go to state 16


State 10

   12 exp: DEF . TYPE_DECL WORD '(' explist_params ')' '{' exp '}'

    TYPE_DECL  shift, and go to state 17


State 11

    9 exp: '{' . explist '}'

    $default  reduce using rule 4 (explist)

    explist  go to state 18


State 12

    3 explist: explist exp . NEWLINE

    NEWLINE  shift, and go to state 19


State 13

   10 exp: WORD ASSIGN . exp

    WORD           shift, and go to state 4
    PRINT          shift, and go to state 6
    STRING         shift, and go to state 7
    INTEGER_CONST  shift, and go to state 8
    TYPE_DECL      shift, and go to state 9
    DEF            shift, and go to state 10
    '{'            shift, and go to state 11

    exp  go to state 20


State 14

   14 exp: WORD '(' . ')'

    ')'  shift, and go to state 21


State 15

    8 exp: PRINT exp .

    $default  reduce using rule 8 (exp)


State 16

   11 exp: TYPE_DECL WORD . ASSIGN exp

    ASSIGN  shift, and go to state 22


State 17

   12 exp: DEF TYPE_DECL . WORD '(' explist_params ')' '{' exp '}'

    WORD  shift, and go to state 23


State 18

    2 explist: explist . NEWLINE
    3        | explist . exp NEWLINE
    9 exp: '{' explist . '}'

    WORD           shift, and go to state 4
    NEWLINE        shift, and go to state 5
    PRINT          shift, and go to state 6
    STRING         shift, and go to state 7
    INTEGER_CONST  shift, and go to state 8
    TYPE_DECL      shift, and go to state 9
    DEF            shift, and go to state 10
    '{'            shift, and go to state 11
    '}'            shift, and go to state 24

    exp  go to state 12


State 19

    3 explist: explist exp NEWLINE .

    $default  reduce using rule 3 (explist)


State 20

   10 exp: WORD ASSIGN exp .

    $default  reduce using rule 10 (exp)


State 21

   14 exp: WORD '(' ')' .

    $default  reduce using rule 14 (exp)


State 22

   11 exp: TYPE_DECL WORD ASSIGN . exp

    WORD           shift, and go to state 4
    PRINT          shift, and go to state 6
    STRING         shift, and go to state 7
    INTEGER_CONST  shift, and go to state 8
    TYPE_DECL      shift, and go to state 9
    DEF            shift, and go to state 10
    '{'            shift, and go to state 11

    exp  go to state 25


State 23

   12 exp: DEF TYPE_DECL WORD . '(' explist_params ')' '{' exp '}'

    '('  shift, and go to state 26


State 24

    9 exp: '{' explist '}' .

    $default  reduce using rule 9 (exp)


State 25

   11 exp: TYPE_DECL WORD ASSIGN exp .

    $default  reduce using rule 11 (exp)


State 26

   12 exp: DEF TYPE_DECL WORD '(' . explist_params ')' '{' exp '}'

    WORD           shift, and go to state 4
    PRINT          shift, and go to state 6
    STRING         shift, and go to state 7
    INTEGER_CONST  shift, and go to state 8
    TYPE_DECL      shift, and go to state 9
    DEF            shift, and go to state 10
    '{'            shift, and go to state 11

    $default  reduce using rule 7 (explist_params)

    explist_params  go to state 27
    exp             go to state 28


State 27

    5 explist_params: explist_params . ',' exp
   12 exp: DEF TYPE_DECL WORD '(' explist_params . ')' '{' exp '}'

    ','  shift, and go to state 29
    ')'  shift, and go to state 30


State 28

    6 explist_params: exp .

    $default  reduce using rule 6 (explist_params)


State 29

    5 explist_params: explist_params ',' . exp

    WORD           shift, and go to state 4
    PRINT          shift, and go to state 6
    STRING         shift, and go to state 7
    INTEGER_CONST  shift, and go to state 8
    TYPE_DECL      shift, and go to state 9
    DEF            shift, and go to state 10
    '{'            shift, and go to state 11

    exp  go to state 31


State 30

   12 exp: DEF TYPE_DECL WORD '(' explist_params ')' . '{' exp '}'

    '{'  shift, and go to state 32


State 31

    5 explist_params: explist_params ',' exp .

    $default  reduce using rule 5 (explist_params)


State 32

   12 exp: DEF TYPE_DECL WORD '(' explist_params ')' '{' . exp '}'

    WORD           shift, and go to state 4
    PRINT          shift, and go to state 6
    STRING         shift, and go to state 7
    INTEGER_CONST  shift, and go to state 8
    TYPE_DECL      shift, and go to state 9
    DEF            shift, and go to state 10
    '{'            shift, and go to state 11

    exp  go to state 33


State 33

   12 exp: DEF TYPE_DECL WORD '(' explist_params ')' '{' exp . '}'

    '}'  shift, and go to state 34


State 34

   12 exp: DEF TYPE_DECL WORD '(' explist_params ')' '{' exp '}' .

    $default  reduce using rule 12 (exp)
