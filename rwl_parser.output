Terminals unused in grammar

   CLASS
   ELSE
   FI
   IF
   IN
   INHERITS
   LET
   LOOP
   POOL
   THEN
   WHILE
   CASE
   ESAC
   OF
   DARROW
   NEW
   ISVOID
   NOT
   LE
   ERROR
   UPPER
   LOWER
   CHAR
   BOOL_CONST


Rules useless in parser due to conflicts

   10 explist_params: %empty


State 28 conflicts: 7 shift/reduce, 9 reduce/reduce


Grammar

    0 $accept: program "end of file"

    1 program: explist

    2 explist: explist NEWLINE
    3        | explist exp NEWLINE
    4        | explist error NEWLINE
    5        | %empty

    6 explist_params: %empty
    7               | explist_params exp
    8               | exp
    9               | explist_params error
   10               | %empty

   11 exp: PRINT exp
   12    | '{' explist '}'
   13    | WORD ASSIGN exp
   14    | TYPE_DECL WORD ASSIGN exp
   15    | DEF TYPE_DECL WORD '(' explist_params ')' '{' exp '}'
   16    | INTEGER_CONST
   17    | WORD '(' ')'
   18    | WORD
   19    | STRING


Terminals, with rules where they appear

"end of file" (0) 0
'(' (40) 15 17
')' (41) 15 17
'{' (123) 12 15
'}' (125) 12 15
error (256) 4 9
CLASS (258)
ELSE (259)
FI (260)
IF (261)
IN (262)
INHERITS (263)
LET (264)
LOOP (265)
POOL (266)
THEN (267)
WHILE (268)
CASE (269)
ESAC (270)
OF (271)
DARROW (272)
NEW (273)
ISVOID (274)
ASSIGN (280) 13 14
NOT (281)
LE (282)
ERROR (283)
UPPER (284)
LOWER (285)
WORD (286) 13 14 15 17 18
NEWLINE (287) 2 3 4
CHAR (288)
PRINT (289) 11
STRING (290) 19
INTEGER_CONST (291) 16
BOOL_CONST (292)
TYPE_DECL (293) 14 15
DEF (294) 15


Nonterminals, with rules where they appear

$accept (39)
    on left: 0
program (40)
    on left: 1, on right: 0
explist (41)
    on left: 2 3 4 5, on right: 1 2 3 4 12
explist_params (42)
    on left: 6 7 8 9 10, on right: 7 9 15
exp (43)
    on left: 11 12 13 14 15 16 17 18 19, on right: 3 7 8 11 13 14 15


State 0

    0 $accept: . program "end of file"

    $default  reduce using rule 5 (explist)

    program  go to state 1
    explist  go to state 2


State 1

    0 $accept: program . "end of file"

    "end of file"  shift, and go to state 3


State 2

    1 program: explist .
    2 explist: explist . NEWLINE
    3        | explist . exp NEWLINE
    4        | explist . error NEWLINE

    error          shift, and go to state 4
    WORD           shift, and go to state 5
    NEWLINE        shift, and go to state 6
    PRINT          shift, and go to state 7
    STRING         shift, and go to state 8
    INTEGER_CONST  shift, and go to state 9
    TYPE_DECL      shift, and go to state 10
    DEF            shift, and go to state 11
    '{'            shift, and go to state 12

    "end of file"  reduce using rule 1 (program)

    exp  go to state 13


State 3

    0 $accept: program "end of file" .

    $default  accept


State 4

    4 explist: explist error . NEWLINE

    NEWLINE  shift, and go to state 14


State 5

   13 exp: WORD . ASSIGN exp
   17    | WORD . '(' ')'
   18    | WORD .

    ASSIGN  shift, and go to state 15
    '('     shift, and go to state 16

    $default  reduce using rule 18 (exp)


State 6

    2 explist: explist NEWLINE .

    $default  reduce using rule 2 (explist)


State 7

   11 exp: PRINT . exp

    WORD           shift, and go to state 5
    PRINT          shift, and go to state 7
    STRING         shift, and go to state 8
    INTEGER_CONST  shift, and go to state 9
    TYPE_DECL      shift, and go to state 10
    DEF            shift, and go to state 11
    '{'            shift, and go to state 12

    exp  go to state 17


State 8

   19 exp: STRING .

    $default  reduce using rule 19 (exp)


State 9

   16 exp: INTEGER_CONST .

    $default  reduce using rule 16 (exp)


State 10

   14 exp: TYPE_DECL . WORD ASSIGN exp

    WORD  shift, and go to state 18


State 11

   15 exp: DEF . TYPE_DECL WORD '(' explist_params ')' '{' exp '}'

    TYPE_DECL  shift, and go to state 19


State 12

   12 exp: '{' . explist '}'

    $default  reduce using rule 5 (explist)

    explist  go to state 20


State 13

    3 explist: explist exp . NEWLINE

    NEWLINE  shift, and go to state 21


State 14

    4 explist: explist error NEWLINE .

    $default  reduce using rule 4 (explist)


State 15

   13 exp: WORD ASSIGN . exp

    WORD           shift, and go to state 5
    PRINT          shift, and go to state 7
    STRING         shift, and go to state 8
    INTEGER_CONST  shift, and go to state 9
    TYPE_DECL      shift, and go to state 10
    DEF            shift, and go to state 11
    '{'            shift, and go to state 12

    exp  go to state 22


State 16

   17 exp: WORD '(' . ')'

    ')'  shift, and go to state 23


State 17

   11 exp: PRINT exp .

    $default  reduce using rule 11 (exp)


State 18

   14 exp: TYPE_DECL WORD . ASSIGN exp

    ASSIGN  shift, and go to state 24


State 19

   15 exp: DEF TYPE_DECL . WORD '(' explist_params ')' '{' exp '}'

    WORD  shift, and go to state 25


State 20

    2 explist: explist . NEWLINE
    3        | explist . exp NEWLINE
    4        | explist . error NEWLINE
   12 exp: '{' explist . '}'

    error          shift, and go to state 4
    WORD           shift, and go to state 5
    NEWLINE        shift, and go to state 6
    PRINT          shift, and go to state 7
    STRING         shift, and go to state 8
    INTEGER_CONST  shift, and go to state 9
    TYPE_DECL      shift, and go to state 10
    DEF            shift, and go to state 11
    '{'            shift, and go to state 12
    '}'            shift, and go to state 26

    exp  go to state 13


State 21

    3 explist: explist exp NEWLINE .

    $default  reduce using rule 3 (explist)


State 22

   13 exp: WORD ASSIGN exp .

    $default  reduce using rule 13 (exp)


State 23

   17 exp: WORD '(' ')' .

    $default  reduce using rule 17 (exp)


State 24

   14 exp: TYPE_DECL WORD ASSIGN . exp

    WORD           shift, and go to state 5
    PRINT          shift, and go to state 7
    STRING         shift, and go to state 8
    INTEGER_CONST  shift, and go to state 9
    TYPE_DECL      shift, and go to state 10
    DEF            shift, and go to state 11
    '{'            shift, and go to state 12

    exp  go to state 27


State 25

   15 exp: DEF TYPE_DECL WORD . '(' explist_params ')' '{' exp '}'

    '('  shift, and go to state 28


State 26

   12 exp: '{' explist '}' .

    $default  reduce using rule 12 (exp)


State 27

   14 exp: TYPE_DECL WORD ASSIGN exp .

    $default  reduce using rule 14 (exp)


State 28

   15 exp: DEF TYPE_DECL WORD '(' . explist_params ')' '{' exp '}'

    WORD           shift, and go to state 5
    PRINT          shift, and go to state 7
    STRING         shift, and go to state 8
    INTEGER_CONST  shift, and go to state 9
    TYPE_DECL      shift, and go to state 10
    DEF            shift, and go to state 11
    '{'            shift, and go to state 12

    error          reduce using rule 6 (explist_params)
    error          [reduce using rule 10 (explist_params)]
    WORD           [reduce using rule 6 (explist_params)]
    WORD           [reduce using rule 10 (explist_params)]
    PRINT          [reduce using rule 6 (explist_params)]
    PRINT          [reduce using rule 10 (explist_params)]
    STRING         [reduce using rule 6 (explist_params)]
    STRING         [reduce using rule 10 (explist_params)]
    INTEGER_CONST  [reduce using rule 6 (explist_params)]
    INTEGER_CONST  [reduce using rule 10 (explist_params)]
    TYPE_DECL      [reduce using rule 6 (explist_params)]
    TYPE_DECL      [reduce using rule 10 (explist_params)]
    DEF            [reduce using rule 6 (explist_params)]
    DEF            [reduce using rule 10 (explist_params)]
    '{'            [reduce using rule 6 (explist_params)]
    '{'            [reduce using rule 10 (explist_params)]
    ')'            reduce using rule 6 (explist_params)
    ')'            [reduce using rule 10 (explist_params)]
    $default       reduce using rule 6 (explist_params)

    explist_params  go to state 29
    exp             go to state 30


State 29

    7 explist_params: explist_params . exp
    9               | explist_params . error
   15 exp: DEF TYPE_DECL WORD '(' explist_params . ')' '{' exp '}'

    error          shift, and go to state 31
    WORD           shift, and go to state 5
    PRINT          shift, and go to state 7
    STRING         shift, and go to state 8
    INTEGER_CONST  shift, and go to state 9
    TYPE_DECL      shift, and go to state 10
    DEF            shift, and go to state 11
    '{'            shift, and go to state 12
    ')'            shift, and go to state 32

    exp  go to state 33


State 30

    8 explist_params: exp .

    $default  reduce using rule 8 (explist_params)


State 31

    9 explist_params: explist_params error .

    $default  reduce using rule 9 (explist_params)


State 32

   15 exp: DEF TYPE_DECL WORD '(' explist_params ')' . '{' exp '}'

    '{'  shift, and go to state 34


State 33

    7 explist_params: explist_params exp .

    $default  reduce using rule 7 (explist_params)


State 34

   15 exp: DEF TYPE_DECL WORD '(' explist_params ')' '{' . exp '}'

    WORD           shift, and go to state 5
    PRINT          shift, and go to state 7
    STRING         shift, and go to state 8
    INTEGER_CONST  shift, and go to state 9
    TYPE_DECL      shift, and go to state 10
    DEF            shift, and go to state 11
    '{'            shift, and go to state 12

    exp  go to state 35


State 35

   15 exp: DEF TYPE_DECL WORD '(' explist_params ')' '{' exp . '}'

    '}'  shift, and go to state 36


State 36

   15 exp: DEF TYPE_DECL WORD '(' explist_params ')' '{' exp '}' .

    $default  reduce using rule 15 (exp)
